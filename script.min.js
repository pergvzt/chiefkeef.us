document.addEventListener('DOMContentLoaded', () => { const overlayText = document.getElementById('overlay-text'); const overlay = document.getElementById('overlay'); const centerBox = document.getElementById('center-box'); const playPauseButton = document.getElementById('play-pause'); setTimeout(() => overlayText.classList.add('visible'), 250); const gradient = new Gradient(); gradient.initGradient('#gradient-canvas'); shuffleSongs(); loadSong(currentSongIndex); updateCounters(); overlayText.addEventListener('click', () => { overlay.classList.add('hidden'); setTimeout(() => { overlay.style.display = 'none'; centerBox.style.display = 'block'; setTimeout(() => { centerBox.style.opacity = 1; centerBox.style.transform = 'translate(-50%, -50%) scale(1)'; setTimeout(() => { centerBox.style.animation = 'pulse 2s infinite ease-in-out'; }, 2000); }, 500); }, 1000); const musicPlayer = document.getElementById('music-player'); setTimeout(() => { musicPlayer.style.opacity = 1; musicPlayer.style.transform = 'translate(-50%, 0)'; }, 2500); playPause(); }); }); const songs = [ 'sounds/Macias - INTRODESTRUKCJA.mp3', 'sounds/PIKERS - NIKT NIE MOWIŁ ŻE ŁATWO BĘDZIE.mp3', 'sounds/DiamondsOnMyDick - Bloodr4yne.mp3', 'sounds/GRUBVS - NIE POMOGE.mp3', 'sounds/ICYTWAT - AT YA DOME.mp3', 'sounds/ICYTWAT - COME SEE ME.mp3', 'sounds/kt - 223.mp3', 'sounds/ICYTWAT - LOVE WHO.mp3', 'sounds/PIKERS - CYRKIEL EVILPLUG.mp3', 'sounds/THOTTWAT - FUKDALAW.mp3', 'sounds/ICYTWAT - Eyez On Em.mp3', 'sounds/THOTTWAT - MILITIA.mp3', 'sounds/tn_490 - Please.mp3', 'sounds/VKIE - 2007 PIERWSZY TRACK.mp3', 'sounds/VKIE - KILO.mp3', 'sounds/TOM HENGST - 2 ZÖPFE.mp3', 'sounds/VKIE - NLE.mp3', 'sounds/tn_490 - Jezebel.mp3', 'sounds/TOM HENGST - LOBSTER.mp3' ]; let playedSongsCount = 0; let currentSongIndex = 0; const songHistory = []; const audioPlayer = document.getElementById('audio-player'); const songTitle = document.getElementById('song-title'); const playPauseButton = document.getElementById('play-pause'); const progress = document.getElementById('progress'); const progressContainer = document.getElementById('progress-container'); const songsPlayed = document.getElementById('songs-played'); const songsLeft = document.getElementById('songs-left'); const timeElapsed = document.getElementById('time-elapsed'); const timeRemaining = document.getElementById('time-remaining'); let isDragging = false; let wasPlaying = false; function updateCounters() { songsPlayed.innerText = `Songs played: ${Math.min(playedSongsCount + 1, songs.length)}`; songsLeft.innerText = `Songs left: ${Math.max(songs.length - (playedSongsCount + 1), 0)}`; } function loadSong(index) { audioPlayer.src = songs[index]; const songName = songs[index].split('/').pop().replace('.mp3', ''); songTitle.innerText = songName; updateCounters(); } function playPause() { if (audioPlayer.paused) { audioPlayer.play(); playPauseButton.classList.add('paused'); } else { audioPlayer.pause(); playPauseButton.classList.remove('paused'); } } function prevSong() { if (songHistory.length > 0) { currentSongIndex = songHistory.pop(); playedSongsCount--; loadSong(currentSongIndex); audioPlayer.play(); playPauseButton.classList.add('paused'); updateCounters(); } } function shuffleSongs() { for (let i = songs.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * (i + 1)); [songs[i], songs[j]] = [songs[j], songs[i]]; } } function nextSong() { if (playedSongsCount >= songs.length - 1) { shuffleSongs(); playedSongsCount = 0; songHistory.length = 0; } else { songHistory.push(currentSongIndex); currentSongIndex = (currentSongIndex + 1) % songs.length; playedSongsCount++; } loadSong(currentSongIndex); audioPlayer.play(); playPauseButton.classList.add('paused'); updateCounters(); } function updateProgress() { const { currentTime, duration } = audioPlayer; if (isNaN(currentTime) || isNaN(duration)) return; const percentage = (currentTime / duration) * 100; progress.style.width = percentage + '%'; const currentMinutes = Math.floor(currentTime / 60); const currentSeconds = Math.floor(currentTime % 60); const remainingMinutes = Math.floor((duration - currentTime) / 60); const remainingSeconds = Math.floor((duration - currentTime) % 60); timeElapsed.innerText = `Elapsed: ${currentMinutes}:${currentSeconds < 10 ? '0' : ''}${currentSeconds}`; timeRemaining.innerText = `Remaining: ${remainingMinutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`; } function setProgress(event) { const rect = progressContainer.getBoundingClientRect(); const width = rect.width; const clickX = event.clientX - rect.left; const duration = audioPlayer.duration; if (!isNaN(duration)) { audioPlayer.currentTime = (clickX / width) * duration; updateProgress(); } } function startDrag(event) { isDragging = true; wasPlaying = !audioPlayer.paused; audioPlayer.pause(); setProgress(event); document.body.style.cursor = 'default'; } function drag(event) { if (isDragging) { requestAnimationFrame(() => setProgress(event)); } } function endDrag() { if (isDragging) { isDragging = false; if (wasPlaying) { audioPlayer.play(); } document.body.style.cursor = 'default'; } } let firstMove = true; let particleInterval; let mouseX, mouseY; document.addEventListener("DOMContentLoaded", () => { document.addEventListener("mousemove", function(e) { mouseX = e.clientX; mouseY = e.clientY; if (firstMove) { firstMove = false; createParticles(mouseX, mouseY, true, "particle", 15, 15); particleInterval = setInterval(() => { createParticles(mouseX, mouseY, false, "particle", 15, 15); }, 100); } }); }); function createParticles(x, y, initial, className, spreadX, spreadY) { for (let i = 0; i < 1; i++) { createParticle(x, y, initial, className, spreadX, spreadY); } } function createParticle(x, y, initial, className, spreadX, spreadY) { const particle = document.createElement("div"); particle.classList.add(className); if (initial) particle.classList.add("first-move"); document.body.appendChild(particle); particle.style.backgroundColor = ["#656a95", "#0c0d0d"][Math.floor(Math.random() * 2)]; particle.style.left = `${x + (Math.random() - 0.5) * spreadX}px`; particle.style.top = `${y + (Math.random() - 0.5) * spreadY}px`; particle.style.animationDuration = `${0.5 * Math.random() + 0.5}s`; particle.style.transform = `translateX(${(Math.random() - 0.5) * spreadX}px) translateY(${(Math.random() - 0.5) * spreadY}px)`; setTimeout(() => { particle.remove(); }, 500); } playPauseButton.addEventListener('click', playPause); document.getElementById('prev').addEventListener('click', prevSong); document.getElementById('next').addEventListener('click', nextSong); audioPlayer.addEventListener('timeupdate', updateProgress); audioPlayer.addEventListener('ended', nextSong); progressContainer.addEventListener('mousedown', startDrag); document.addEventListener('mousemove', drag); document.addEventListener('mouseup', endDrag);
